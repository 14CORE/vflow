//: ----------------------------------------------------------------------------
//: Copyright (C) 2017 Verizon.  All Rights Reserved.
//: All Rights Reserved
//:
//: file:    decoder_test.go
//: details: TODO
//: author:  Mehrdad Arshad Rad
//: date:    02/01/2017
//:
//: Licensed under the Apache License, Version 2.0 (the "License");
//: you may not use this file except in compliance with the License.
//: You may obtain a copy of the License at
//:
//:     http://www.apache.org/licenses/LICENSE-2.0
//:
//: Unless required by applicable law or agreed to in writing, software
//: distributed under the License is distributed on an "AS IS" BASIS,
//: WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//: See the License for the specific language governing permissions and
//: limitations under the License.
//: ----------------------------------------------------------------------------
package ipfix

import (
	"net"
	"testing"
)

var tpl, optsTpl []byte

func init() {
	// IPFIX packet including template SetID:2, 25 fields
	tpl = []byte{
		0x0, 0xa, 0x0, 0x7c, 0x58, 0x90, 0xd6, 0x40, 0x28, 0xf7,
		0xa0, 0x4a, 0x0, 0x0, 0x84, 0x0, 0x0, 0x2, 0x0, 0x6c, 0x1,
		0x0, 0x0, 0x19, 0x0, 0x8, 0x0, 0x4, 0x0, 0xc, 0x0, 0x4,
		0x0, 0x5, 0x0, 0x1, 0x0, 0x4, 0x0, 0x1, 0x0, 0x7, 0x0, 0x2,
		0x0, 0xb, 0x0, 0x2, 0x0, 0x20, 0x0, 0x2, 0x0, 0xa, 0x0, 0x4,
		0x0, 0x3a, 0x0, 0x2, 0x0, 0x9, 0x0, 0x1, 0x0, 0xd, 0x0, 0x1,
		0x0, 0x10, 0x0, 0x4, 0x0, 0x11, 0x0, 0x4, 0x0, 0xf, 0x0, 0x4,
		0x0, 0x6, 0x0, 0x1, 0x0, 0xe, 0x0, 0x4, 0x0, 0x1, 0x0, 0x8,
		0x0, 0x2, 0x0, 0x8, 0x0, 0x34, 0x0, 0x1, 0x0, 0x35, 0x0, 0x1,
		0x0, 0x98, 0x0, 0x8, 0x0, 0x99, 0x0, 0x8, 0x0, 0x88, 0x0, 0x1,
		0x0, 0xf3, 0x0, 0x2, 0x0, 0xf5, 0x0, 0x2,
	}
	// IPFIX packet including template SetID:3, 6 fields
	optsTpl = []byte{
		0x0, 0xa, 0x0, 0x34, 0x58, 0x6c, 0x2e, 0x4f, 0x0, 0x1d, 0x97,
		0x9e, 0x0, 0x0, 0x8b, 0x3, 0x0, 0x3, 0x0, 0x24, 0x2, 0x0, 0x0,
		0x6, 0x0, 0x1, 0x0, 0x90, 0x0, 0x4, 0x0, 0xa0, 0x0, 0x8, 0x0,
		0x82, 0x0, 0x4, 0x0, 0x83, 0x0, 0x10, 0x0, 0xd6, 0x0, 0x1, 0x0,
		0xd7, 0x0, 0x1, 0x0, 0x0,
	}

}

func TestDecodeNoData(t *testing.T) {
	ip := net.ParseIP("127.0.0.1")
	mCache := GetCache()
	body := []byte{}
	d := NewDecoder(ip, body)
	if _, err := d.Decode(mCache); err == nil {
		t.Error("expected err but nothing")
	}
}

func TestDecodeTemplate(t *testing.T) {
	ip := net.ParseIP("127.0.0.1")
	mCache := GetCache()
	d := NewDecoder(ip, tpl)
	_, err := d.Decode(mCache)
	if err != nil {
		t.Error("unexpected error happened, got", err)
	}
}

func TestDecodeOptsTemplate(t *testing.T) {
	ip := net.ParseIP("127.0.0.1")
	mCache := GetCache()
	d := NewDecoder(ip, optsTpl)
	_, err := d.Decode(mCache)
	if err != nil {
		t.Error("unexpected error happened, got", err)
	}
}

func BenchmarkDecodeTemplate(b *testing.B) {
	ip := net.ParseIP("127.0.0.1")
	mCache := GetCache()
	for i := 0; i < b.N; i++ {
		d := NewDecoder(ip, tpl)
		d.Decode(mCache)
	}
}

func BenchmarkDecodeOptsTemplate(b *testing.B) {
	ip := net.ParseIP("127.0.0.1")
	mCache := GetCache()
	for i := 0; i < b.N; i++ {
		d := NewDecoder(ip, optsTpl)
		d.Decode(mCache)
	}
}
